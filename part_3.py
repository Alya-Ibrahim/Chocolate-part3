# -*- coding: utf-8 -*-
"""part-3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1W6JlztnWlt05nVS6I15DJnjZQw476Alr
"""

def binary_search_chocolate(chocolates, key, value):
    low = 0  # Starting the index of the search range
    high = len(chocolates) - 1  # Ending index of the search range

    while low <= high:  #Use s while loop so that it can continue until the search range is exhausted
        mid = (low + high) // 2  #find the middle index of the search range
        if chocolates[mid][key] == value:  #An if-statemnt is used to check if the middle chocolate matches the search value
            return chocolates[mid]  #if condition is met it will return the found chocolate
        elif chocolates[mid][key] < value:  #if the middle chocolate's value is less than the search value
            low = mid + 1  #it will narrow the search to the right half
        else:  #if the middle chocolate's value is greater than the search value
            high = mid - 1  #it will narrow the search to the left half
    return None  #it will return None if the chocolate is not found

#here it shows the four test cases
# Test Case 1: Searching for a chocolate with a specific weight that exists in the list
chocolates_sorted_by_weight = [
    {'student': 'Alya', 'weight': 50, 'price': 2, 'type': 'Milk'},
    {'student': 'Hessa', 'weight': 60, 'price': 3, 'type': 'Dark'},
    {'student': 'Najla', 'weight': 70, 'price': 4, 'type': 'White'}
]
# Expected output: The dictionary for 'Hessa' since her chocolate matches the specified weight
print(binary_search_chocolate(chocolates_sorted_by_weight, 'weight', 60))

# Test Case 2: Searching for a chocolate with a specific price that exists in the list
chocolates_sorted_by_price = [
    {'student': 'Alya', 'weight': 50, 'price': 2, 'type': 'Milk'},
    {'student': 'Hessa', 'weight': 60, 'price': 3, 'type': 'Dark'},
    {'student': 'Najla', 'weight': 70, 'price': 4, 'type': 'White'}
]
# Expected output: The dictionary for 'Najla' since her chocolate matches the specified price
print(binary_search_chocolate(chocolates_sorted_by_price, 'price', 4))

# Test Case 3: Searching for a chocolate with a specific weight that does not exist in the list
# Expected output: None, indicating no match found for the specified weight
print(binary_search_chocolate(chocolates_sorted_by_weight, 'weight', 55))

# Test Case 4: Searching for a chocolate with a specific price that does not exist in the list
# Expected output: None, indicating no match found for the specified price
print(binary_search_chocolate(chocolates_sorted_by_price, 'price', 7))